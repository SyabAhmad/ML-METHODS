# .github/workflows/daily.yml
name: LOVE MENTEE Daily Commit

on:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at 00:00 UTC
  workflow_dispatch:     # Allows manual trigger (for testing)

jobs:
  love-mentee:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0  # Get full history

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Check if today is a pixel day & commit 12 methods
        run: |
          python <<'EOF'
import json
import os
from datetime import datetime

TODAY = datetime.utcnow().strftime("%Y-%m-%d")

# Load pixel days
if not os.path.exists("pixel_days.json"):
    print("❌ pixel_days.json not found!")
    exit(1)

with open("pixel_days.json") as f:
    pixel_days = set(json.load(f))

if TODAY not in pixel_days:
    print(f"📅 {TODAY} is not a LOVE MENTEE day. Skipping.")
    exit(0)

print(f"🎉 {TODAY} is a LOVE MENTEE day!")

# Read methods
if not os.path.exists("methods.txt"):
    print("❌ methods.txt not found!")
    exit(1)

with open("methods.txt", "r") as f:
    all_methods = [line.strip() for line in f if line.strip()]

if not all_methods:
    print("❌ methods.txt is empty!")
    exit(1)

# Take up to 12
methods_to_use = all_methods[:12]
remaining = all_methods[12:]

print(f"📦 Using {len(methods_to_use)} methods")

# Write log and commit each
for i, method in enumerate(methods_to_use, 1):
    with open("committed_methods.log", "a") as log:
        log.write(f"{TODAY}: {method}\n")
    os.system(f'git add committed_methods.log')
    os.system(f'git commit -m "Add: {method} ({i}/{len(methods_to_use)})"')

# Save remaining methods
with open("methods.txt", "w") as f:
    for m in remaining:
        f.write(m + "\n")

print(f"💾 {len(remaining)} methods left")
EOF

      - name: Configure Git
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Push changes
        run: |
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}